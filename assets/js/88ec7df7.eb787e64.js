"use strict";(self.webpackChunkapache_website_template=self.webpackChunkapache_website_template||[]).push([[6729],{1486:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});var n=r(1527),i=r(395);const t={id:"how_to_develop_java",title:"How to Develop Java Library",sidebar_position:1},o=void 0,s={id:"libraries/java/how_to_develop_java",title:"How to Develop Java Library",description:"Introduction",source:"@site/docs/libraries/java/how_to_develop_java.md",sourceDirName:"libraries/java",slug:"/libraries/java/how_to_develop_java",permalink:"/docs/libraries/java/how_to_develop_java",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/incubator-graphar/edit/main/docs/libraries/java/how_to_develop_java.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"how_to_develop_java",title:"How to Develop Java Library",sidebar_position:1},sidebar:"documentation",previous:{title:"Java Library",permalink:"/docs/libraries/java/"},next:{title:"Spark Library",permalink:"/docs/libraries/spark/"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Source Code Level",id:"source-code-level",level:3},{value:"Runtime Level",id:"runtime-level",level:3},{value:"Building GraphAr Java",id:"building-graphar-java",level:2},{value:"How To Test",id:"how-to-test",level:2},{value:"Code Style",id:"code-style",level:2}];function d(e){const a={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsxs)(a.p,{children:["GraphAr Java library based on GraphAr C++ library and an efficient FFI\nfor Java and C++ called\n",(0,n.jsx)(a.a,{href:"https://github.com/alibaba/fastFFI",children:"FastFFI"}),"."]}),"\n",(0,n.jsx)(a.h3,{id:"source-code-level",children:"Source Code Level"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Interface"}),"\n",(0,n.jsx)(a.li,{children:"Class"}),"\n",(0,n.jsx)(a.li,{children:"JNI code"}),"\n",(0,n.jsx)(a.li,{children:"GraphAr C++ library"}),"\n"]}),"\n",(0,n.jsxs)(a.p,{children:["If you want to use classes or functions of GraphAr C++ library through\nJAVA SDK, you only need to write interfaces with annotations. After the\ninterfaces are ready, the java code for the interfaces and the the C++\ncode which include JNI code for native methods will be automatically\ngenerated by FastFFI.For annotation\u2019s usage, please refer to\n",(0,n.jsx)(a.a,{href:"https://github.com/alibaba/fastFFI",children:"FastFFI"}),"."]}),"\n",(0,n.jsx)(a.h3,{id:"runtime-level",children:"Runtime Level"}),"\n",(0,n.jsx)(a.p,{children:"Interfaces and classes will be compiled to bytecode. Usually, JNI code\nwill be compiled to bitcode as a part of dynamic library which can be\ncalled by native methods directly. If llvm4jni is enable, suitable\nmethod in JNI will be transferred to bytecode."}),"\n",(0,n.jsx)(a.p,{children:"For decoupling the implementation of C++ and Java, we use a bridge\ndynamic library called gar-jni to connect them, it will integrate all\nC++ dependencies(e.g.\xa0JNI code, GraphAr C++ library and arrow C++) and\ncan be called by native methods in Java directly. Most JNI code is\ngenerated by FastFFI, but some JNI code is written by ourselves, such as\nJNI code for transferring VectorSchemaRoot into arrow::Table."}),"\n",(0,n.jsx)(a.p,{children:"To build the bridge dynamic library, here is main part of our CMakeLists.txt:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-cmake",children:'# set auto-generated JNI code and handwriting JNI code as source files\nfile(GLOB SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/target/generated-sources/annotations/*.cc" "${CMAKE_CURRENT_SOURCE_DIR}/target/generated-test-sources/test-annotations/*.cc"\n                  "${CMAKE_CURRENT_SOURCE_DIR}/src/main/cpp/ffi/*.cc")\n# remove auto-generated JNI code for specific method cause we have handwriting JNI code for it\nlist(REMOVE_ITEM SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/target/generated-sources/annotations/jni_com_alibaba_graphar_arrow_ArrowTable_Static_cxx_0x58c7409.cc")\n\nset(LIBNAME "gar-jni")\n\n# find JNI related libraries\nfind_package(JNI REQUIRED)\ninclude_directories(SYSTEM ${JAVA_INCLUDE_PATH})\ninclude_directories(SYSTEM ${JAVA_INCLUDE_PATH2})\n\n# some JNI code depends on arrow\nfind_package(Arrow REQUIRED)\n# build graphar-cpp in specific version\ninclude(graphar-cpp)\nbuild_graphar_cpp()\n\n# build the bridge JNI library\nadd_library(${LIBNAME} SHARED ${SOURCES})\n# include graphar-cpp headers\ntarget_include_directories(${LIBNAME} SYSTEM BEFORE PRIVATE ${GRAPHAR_INCLUDE_DIR})\n# link graphar-cpp and arrow\ntarget_link_libraries(${LIBNAME} ${CMAKE_JNI_LINKER_FLAGS} gar_shared)\ntarget_link_libraries(${LIBNAME} ${CMAKE_JNI_LINKER_FLAGS} Arrow::arrow_static)\n'})}),"\n",(0,n.jsxs)(a.p,{children:["More about usage of CMake, please refer to\n",(0,n.jsx)(a.a,{href:"https://cmake.org/",children:"CMake's official website"}),"."]}),"\n",(0,n.jsx)(a.h2,{id:"building-graphar-java",children:"Building GraphAr Java"}),"\n",(0,n.jsxs)(a.p,{children:["Please refer to\n",(0,n.jsx)(a.a,{href:"/docs/libraries/java/",children:"GraphAr Java Library user guide"}),"."]}),"\n",(0,n.jsx)(a.h2,{id:"how-to-test",children:"How To Test"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"export GAR_TEST_DATA=$PWD/../../testing/\nmvn clean test\n"})}),"\n",(0,n.jsxs)(a.p,{children:["This will build GraphAr C++ library internally for Java. If you already\ninstalled GraphAr C++ library in your system, you can append this option\nto skip: ",(0,n.jsx)(a.code,{children:"-DbuildGarCPP=OFF"}),"."]}),"\n",(0,n.jsx)(a.h2,{id:"code-style",children:"Code Style"}),"\n",(0,n.jsxs)(a.p,{children:["We follow\n",(0,n.jsx)(a.a,{href:"https://source.android.com/docs/setup/contribute/code-style",children:"AOSP Java code style"}),".\nTo ensure CI for checking code style will pass, please ensure check\nbelow is success:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"mvn spotless:check\n"})}),"\n",(0,n.jsx)(a.p,{children:"If there are violations, running command below to automatically format:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"mvn spotless:apply\n"})})]})}function h(e={}){const{wrapper:a}={...(0,i.a)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},395:(e,a,r)=>{r.d(a,{Z:()=>s,a:()=>o});var n=r(959);const i={},t=n.createContext(i);function o(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);